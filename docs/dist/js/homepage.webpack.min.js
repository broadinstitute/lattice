var homepage=function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t){document.addEventListener("DOMContentLoaded",(function(){o(),n(),initCovidMap(),r()}));const o=()=>{document.getElementById("plot-types").innerHTML=Object.values(LatticeLib.showAvailablePlotTypes()).join("<br>"),document.getElementById("plot-config-opt").innerHTML=LatticeLib.getPlotOptions(),demoAreaPlot(),demoBarcodePlot(),demoBarPlot(),demoColumnPlot(),demoCategoricalHeatmap(),demoHeatmap(),demoScatterPlot(),demoStackedBarPlot(),demoStackedColumnPlot()},n=()=>{document.getElementById("lattice-config-opt").innerHTML=LatticeLib.getLatticeOptions(),init()},r=()=>{iCoMut.init("comut-plot",{config:"/src/config/config.json",data:"/src/data/ACC-TP.coMut_table.json"})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,